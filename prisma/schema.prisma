generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id                 String             @id @default(cuid())
  username           String             @unique
  name               String
  email              String?            @unique
  imageProfile       String?
  sexo               Sexo
  postagens          Postagem[]
  bio                String?
  localizacao        String?
  telefone           String?
  curtidasPostagens  CurtidasPostagem[] @relation(name: "CurtidasDePostagem")
  curtidasDePerfil   CurtidasPerfil[]   @relation(name: "CurtidasDePerfil")
  perfisCurtidos     CurtidasPerfil[]   @relation(name: "PerfisCurtidos")
  convitesRealizados Encontro[]         @relation("EncontrosUsuario1")
  convitesRecebidos  Encontro[]         @relation("EncontrosUsuario2")
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
}

model Postagem {
  id          String             @id @default(cuid())
  userId      String
  user        Usuario            @relation(fields: [userId], references: [id])
  conteudo    String
  image       String
  qtdCurtidas Int
  quemCurtiu  CurtidasPostagem[]
  published   Boolean            @default(false)
  createdAt   DateTime           @default(now())
}

model CurtidasPostagem {
  id     String   @id @default(cuid())
  userId String
  user   Usuario  @relation(name: "CurtidasDePostagem", fields: [userId], references: [id])
  postId String
  post   Postagem @relation(fields: [postId], references: [id])
}

model CurtidasPerfil {
  id        String   @id @default(cuid())
  userId    String
  user      Usuario  @relation(name: "CurtidasDePerfil", fields: [userId], references: [id])
  perfilId  String
  perfil    Usuario  @relation(name: "PerfisCurtidos", fields: [perfilId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Encontro {
  id          String   @id @default(cuid())
  titulo      String
  descricao   String?
  dataHora    DateTime
  localizacao String?
  usuario1Id  String
  usuario1    Usuario  @relation("EncontrosUsuario1", fields: [usuario1Id], references: [id])
  usuario2Id  String
  usuario2    Usuario  @relation("EncontrosUsuario2", fields: [usuario2Id], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([usuario1Id, usuario2Id]) 
}

enum Sexo {
  FEMININO
  MASCULINO
}

enum StatusEncontro {
  ENVIADO
  CONFIRMADO
  REJEIRADO
}